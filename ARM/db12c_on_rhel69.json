{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "_artifactsLocation": {
        "type": "string",
        "metadata": {
          "description": "The base URL where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated.",
          "artifactsBaseUrl": ""
        },
        "defaultValue": "https://raw.githubusercontent.com/ozboms/oracledbonazure/ozibranch"
      },
      "adminUsername": {
        "type": "string",
        "metadata": {
          "description": "User name for the Virtual Machine."
        }
      },
      "adminPassword": {
        "type": "securestring",
        "metadata": {
          "description": "Password for the Virtual Machine."
        }
      },
      "vmName": {
        "type": "string",
        "metadata": {
          "description": "Name for the Virtual Machine."
        }
      },
      "virtualNetworkNewOrExisting": {
        "type": "string",
        "defaultValue": "new",
        "allowedValues": ["new", "existing"],
        "metadata": {
        "description": "Determines whether or not a new virtual network should be provisioned"
        }
      },
      "virtualNetworkName": {
        "type": "string",
        "defaultValue": "openshiftvnet",
        "metadata": {
        "description": "Name of the virtual network"
        }
      },
      "highAvailability":{
        "type": "bool",
        "defaultValue": false,
        "metadata": {
          "description": "Do you want High Availability (HA) for your VMs? (Will only deploy Availibity Zones if VMs are in certain Azure regions)"
        }
      },
      "osDiskSizeInGB":{
        "type": "int",
        "defaultValue": 1024,
        "allowedValues": [
          32, 64, 128, 512, 1024, 2048, 4096
        ],
        "metadata": {
          "description":"Size of the OS Disk(s) to be attached"
        }
      },
      "redoLogsDiskSku":{
        "type": "string",
        "defaultValue": "Premium_LRS",
        "allowedValues": [
          "Premium_LRS",
          "Standard_LRS",
          "StandardSS_LRS"
        ],
        "metadata": {
          "description":"SKU for the Redo Logs Disk(s) to be attached"
        }
      },
      "redoLogsDiskSizeInGB":{
        "type": "int",
        "defaultValue": 1024,
        "allowedValues": [
          32, 64, 128, 512, 1024, 2048, 4096
        ],
        "metadata": {
          "description":"Size of the Redo Logs Disk(s) to be attached"
        }
      },
      "numberOfRedoLogsDisks":{
        "type": "int",
        "defaultValue": 1,
        "maxValue": 10,
        "metadata": {
          "description":"Number of Redo Logs Disks to be attached to the VM"
        }
      },
      "numberOfDataDisks":{
        "type": "int",
        "defaultValue": 3,
        "maxValue": 64,
        "metadata": {
          "description":"Number of Data Disks to be attached to the VM"
        }
      },
      "dataDiskSku":{
        "type": "string",
        "defaultValue": "Premium_LRS",
        "allowedValues": [
          "Premium_LRS",
          "Standard_LRS",
          "StandardSS_LRS"
        ],
        "metadata": {
          "description":"SKU for the Data Disks to be attached"
        }
      },
      "dataDiskSizeInGB":{
        "type": "int",
        "defaultValue": 1024,
        "allowedValues": [
          32, 64, 128, 512, 1024, 2048, 4096
        ],
        "metadata": {
          "description":"Size of the Data Disk(s) to be attached"
        }
      },
      "readHeavyDatabase":{
        "type": "bool",
        "defaultValue": true,
        "metadata": {
          "description":"Is your Data Read-only or Read-intensive? ('ReadOnly' caching will be turned on your data disks)"
        }
      }
    },
    "variables": {
      "location": "[resourceGroup().location]",
      "resourceGroupName": "[resourceGroup().name]",
      "apiVersionNetwork": "2017-10-01",
      "apiVersionCompute": "2017-03-30",
      "apiVersionLinkTemplate": "2015-01-01",
      "imagePublisher": "RedHat",
      "imageOffer": "RHEL",
      "imageSku": "6.9",
      "nicName": "[concat(uniquestring(parameters('vmName')), 'nic')]",
      "addressPrefix": "10.0.0.0/16",
      "subnetName": "Subnet",
      "subnetPrefix": "10.0.0.0/24",
      "publicIPAddressName": "[concat(uniquestring(parameters('vmName')), 'publicip')]",
      "publicIPAddressType": "Static",
      "dataDisksCaching":"[if(parameters('readHeavyDatabase'), 'ReadOnly', 'None')]",
      "vmSize": "Standard_D2s_v3",
      "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), variables('subnetName'))]",
      "VmDeploymentTemplateUrl": "[concat(parameters('_artifactsLocation'), '/nested/vmdeployment-HA.json')]",
      "zoness" :["1", "2"],
      "copy": [
        {
          "name": "datadiskarray",
          "count": "[parameters('numberOfDataDisks')]",
          "input": {
            "namesofDisks": "[concat(parameters('vmName'), 'AttachedDisk', copyIndex('datadiskarray'))]"
          }
        },
        {
          "name": "redologarray",
          "count": "[parameters('numberOfRedoLogsDisks')]",
          "input": {
            "namesofDisks": "[concat(parameters('vmName'), 'RedoLog', copyIndex('redologarray'))]"
          }
        }
      ],
      "diskarray": "[concat(variables('datadiskarray'), variables('redologarray'))]",
      "zonearray": ["Central US", 
        "East US 2", 
        "France Central", 
        "North Europe", 
        "Southeast Asia", 
        "West Europe", 
        "West US 2"],
      "zoneexists": "[if(contains(variables('zonearray'), variables('location')), 'yes', 'no')]"
    },
    "resources": [
      {
        "apiVersion": "[variables('apiVersionNetwork')]",
        "condition": "[equals(parameters('virtualNetworkNewOrExisting'), 'new')]",
			  "type": "Microsoft.Network/virtualNetworks",
			  "name": "[parameters('virtualNetworkName')]",
        "location": "[variables('location')]",
        "properties": {
          "addressSpace": {
            "addressPrefixes": [
              "[variables('addressPrefix')]"
            ]
          },
          "subnets": [{
              "name": "[variables('subnetName')]",
              "properties": {
                "addressPrefix": "[variables('subnetPrefix')]"
              }
            }]
        }
      },
      {
        "name": "vmHADeployment",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "[variables('apiVersionLinkTemplate')]",
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[variables('VmDeploymentTemplateUrl')]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "adminUsername": {
              "value": "[parameters('adminUsername')]"
            },
            "adminPassword": {
              "value": "[parameters('adminPassword')]"
            },
            "vmName": {
              "value": "[parameters('vmName')]"
            },
            "virtualNetworkName": {
              "value": "[parameters('virtualNetworkName')]"
            },
            "osDiskSizeInGB":{
              "value": "[parameters('osDiskSizeInGB')]"
            },
            "redoLogsDiskSku":{
              "value": "[parameters('redoLogsDiskSku')]"
            },
            "redoLogsDiskSizeInGB":{
              "value": "[parameters('redoLogsDiskSizeInGB')]"
            },
            "numberOfRedoLogsDisks":{
              "value": "[parameters('numberOfRedoLogsDisks')]"
            },
            "numberOfDataDisks":{
              "value": "[parameters('numberOfDataDisks')]"
            },
            "dataDiskSku":{
              "value": "[parameters('dataDiskSku')]"
            },
            "dataDiskSizeInGB":{
              "value": "[parameters('dataDiskSizeInGB')]"
            },
            "readHeavyDatabase":{
              "value": "[parameters('readHeavyDatabase')]"
            },
            "apiVersionCompute":{
              "value": "[variables('apiVersionCompute')]"
            },
            "apiVersionNetwork":{
              "value": "[variables('apiVersionNetwork')]"
            }
          }
        }
      }
    ]
  }